apiVersion: v1
kind: Secret
metadata:
  name: mysql-secret
data:
  mysql_USERNAME: cm9vdA==
  mysql_PASSWORD: cm9vdA==
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: flask-api
  name: flask-api
spec:
  replicas: 1
  strategy: {}
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        io.kompose.service: flask-api
    spec:
      containers:
      - image: dockeropticca/sherweb_api:v1
        name: flask-api
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8000
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: flask-api
  name: flask-api
spec:
  type: NodePort
  ports:
    - port: 8000
      nodePort: 30000
  selector:
    io.kompose.service: flask-api
status:
  loadBalancer: {}
---
apiVersion: v1
kind: Service
metadata:
  creationTimestamp: null
  labels:
    io.kompose.service: flask-api
  name: titanic-api
spec:
  selector:
    io.kompose.service: flask-api
  ports:
  - protocol: "TCP"
    port: 8080
    targetPort: 8000
  type: LoadBalancer
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  replicas: 1
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: kompose convert
        kompose.version: 1.19.0 (f63a961c)
      creationTimestamp: null
      labels:
        io.kompose.service: mysqldb
    spec:
      containers:
      - env:
        - name: MYSQL_DATABASE
          value: titanicdb
        - name: MYSQL_ROOT_HOST
          value: '%'
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql_PASSWORD
        - name: MYSQL_ROOT_USERNAME
          valueFrom:
            secretKeyRef:
              name: mysql-secret
              key: mysql_USERNAME
        image: dockeropticca/sherweb_mysqldb:v1
        name: mysqldb
        ports:
        - containerPort: 3306
        resources: {}
      restartPolicy: Always
status: {}
---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: kompose convert
    kompose.version: 1.19.0 (f63a961c)
  creationTimestamp: null
  labels:
    io.kompose.service: mysqldb
  name: mysqldb
spec:
  ports:
  - name: "3306"
    port: 3306
    targetPort: 3306
  selector:
    io.kompose.service: mysqldb
status:
  loadBalancer: {}
